package org.example.homeTasks.three;

import java.util.Arrays;

public class Six {
    public static void main(String[] args) {

        // Home task six
        int[] array = {64, 34, 25, 12, 22, 11, 90};
        for (int i = 0; i < array.length; i++) {
            int pos = i;
            int min = array[i];
            for (int j = i + 1; j < array.length; j++) {
                if (array[j] < min) {
                    pos = j;
                    min = array[j];
                }
            }
            array[pos] = array[i];
            array[i] = min;
        }
        System.out.println(Arrays.toString(array));
    }

/*
Операції обміну: бульбашкове сортування виконує більше операцій обміну, ніж сортування вибором. У бульбашковому сортуванні
заміни виконуються, якщо суміжні елементи розташовані в неправильному порядку, тоді як у сортуванні вибором після знаходження
мінімального елемента виконується лише одна заміна за одну ітерацію.
Сортування вибором зазвичай є швидшим за бульбашкове сортування для великих несортованих наборів даних, оскільки бульбашкове
сортування передбачає більшу кількість операцій обміну. Проте, якщо вхідний набір даних уже відсортовано або майже відсортовано,
бульбашкове сортування працює краще, оскільки в цьому випадку процес сортування припиняється раніше.
 */
}

